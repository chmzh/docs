
下载 golang
https://storage.googleapis.com/golang/


参考  https://blog.csdn.net/fd_mas/article/details/51911302
1、安装eth
https://github.com/ethereum/go-ethereum/releases

https://github.com/ethereum/webthree-umbrella/releases
>geth # 启动geth，并立即开始同步区块
>geth help # 浏览所有命令的用法
>geth account # 管理账户。后面不跟参数是列出所有账户

各种详细说明，见：https://github.com/ethereum/go-ethereum/wiki

2、安装MIST
https://github.com/ethereum/mist/releases

安装 gcc 命令工具 mingw 64　位
https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/mingw-builds/installer/mingw-w64-install.exe/download?use_mirror=nchc&r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Fmingw-w64%2Ffiles%2FToolchains%2520targetting%2520Win32%2FPersonal%2520Builds%2Fmingw-builds%2Finstaller%2Fmingw-w64-install.exe%2Fdownload%3Fuse_mirror%3Dnchc%26r%3Dhttps%253A%252F%252Fsourceforge.net%252Fprojects%252Fmingw-w64%252F%26use_mirror%3Dnchc&use_mirror=nchc


将flock.go
// Copyright 2016 The Prometheus Authors
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Package flock provides portable file locking. It is essentially ripped out
// from the code of github.com/syndtr/goleveldb. Strange enough that the
// standard library does not provide this functionality. Once this package has
// proven to work as expected, we should probably turn it into a separate
// general purpose package for humanity.
package flock

import (
	"os"
	"path/filepath"
)

// Releaser provides the Release method to release a file lock.
type Releaser interface {
	Release() error
}

// New locks the file with the provided name. If the file does not exist, it is
// created. The returned Releaser is used to release the lock. existed is true
// if the file to lock already existed. A non-nil error is returned if the
// locking has failed. Neither this function nor the returned Releaser is
// goroutine-safe.
func New(fileName string) (r Releaser, existed bool, err error) {
	if err = os.MkdirAll(filepath.Dir(fileName), 0755); err != nil {
		return
	}

	_, err = os.Stat(fileName)
	existed = err == nil

	r, err = newLock(fileName)
	return
}
放到:{GOPATH}\src\github.com\prometheus\prometheus\util\flock


Installation instructions for Windows

安装包管理工具
https://chocolatey.org/install#installing-chocolatey

把@"%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command "iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))" && SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"
拷贝到命令行中执行

https://github.com/ethereum/go-ethereum/wiki/Installation-instructions-for-Windows



错误汇总

Fix cannot find package "golang.org/x/net/context" 
https://blog.csdn.net/Tyro_java/article/details/77609966?locationNum=6&fps=1

最终解决方案

cd src
mkdir golang.org
cd golang.org
mkdir x
cd x
git clone git@github.com:golang/net.git --depth 1

cd src
mkdir golang.org
cd golang.org
mkdir x
cd x
git clone git@github.com:golang/net.git --depth 1

说明，在src目录下创建目录，如：src/golang.org/x/
在x目录下，进行克隆仓库 $ git clone git@github.com:golang/net.git --depth 1
再次尝试编译，此问题被解决




